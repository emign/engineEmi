name: release

on:
  push:
    branches:
      - 'master'

jobs:
  refresh-version-numbers-on-repos:
    #needs: [publish-finalize]
    runs-on: ubuntu-latest
    steps:
      - name: Pull and retrieve version numbers
        uses: actions/checkout@v2
        with:
          ref: dev
      - name: Export Numbers
        run: |
          export ENGINE_VERSION_NUMBER=$(awk -F '=' '/engineVersion=/{print $2}' gradle.properties)
          echo "::set-env name=ENGINE_VERSION::$ENGINE_VERSION_NUMBER"
          export KORGE_VERSION=$(awk -F '=' '/korgeVersion=/{print $2}' gradle.properties)
          echo "::set-env name=KORGE_VERSION::$KORGE_VERSION"
          export KORGE_PLUGIN_VERSION=$(awk -F '=' '/korgePluginVersion=/{print $2}' gradle.properties)
          echo "::set-env name=KORGE_PLUGIN_VERSION::$KORGE_PLUGIN_VERSION"
          export KOTLIN_VERSION=$(awk -F '=' '/kotlinVersion=/{print $2}' gradle.properties)
          echo "::set-env name=KOTLIN_VERSION::$KOTLIN_VERSION"

      - name: Checkout GradlePlugin
        uses: actions/checkout@v2
        with:
          repository: emign/engineEmi_GradlePlugin
          token: ${{ secrets.engineEmiGradlePluginRepoToken }}

      - name: Bump version number for GradlePlugin
        run: |
          sed -i 's/val engineEmiVersion=".*/val engineEmiVersion="'"$ENGINE_VERSION"'"/g' src/main/kotlin/me/emig/engineEmi/gradle/EngineEmiGradlePlugin.kt
          sed -i 's/pluginVersion=.*/pluginVersion='"$ENGINE_VERSION"'/g' gradle.properties
          sed -i 's/kotlinVersion=.*/kotlinVersion='"$KOTLIN_VERSION"'/g' gradle.properties
          sed -i 's/korgeVersion=.*/korgeVersion='"$KORGE_PLUGIN_VERSION"'/g' gradle.properties
          sed -i 's/kotlin("jvm") version .*/kotlin("jvm") version "'"$KOTLIN_VERSION"'"/g' build.gradle.kts
          git config --global user.email ${{ secrets.gitEmail }}
          git config --global user.name ${{ secrets.gitName }}
          git add gradle.properties
          git add build.gradle.kts
          git add src/main/kotlin/me/emig/engineEmi/gradle/EngineEmiGradlePlugin.kt
          git tag automerge
          git commit -m "Bumped version number to $ENGINE_VERSION"

      - name: Create PR for Gradle Plugin
        uses: peter-evans/create-pull-request@v2
        with:
          token: ${{ secrets.engineEmiGradlePluginRepoToken }}
          labels: automerge

      - name: Checkout Template
        uses: actions/checkout@v2
        with:
          repository: emign/engineEmi_Template
          token: ${{ secrets.engineEmiGradlePluginRepoToken }}

      - name: Bump version number for Template
        run: |
          sed -i 's/val engineEmiVersion=".*/val engineEmiVersion="'"$ENGINE_VERSION"'"/g' build.gradle.kts
          git config --global user.email ${{ secrets.gitEmail }}
          git config --global user.name ${{ secrets.gitName }}
          git add build.gradle.kts
          git commit -m "Bumped version number to $ENGINE_VERSION"

      - name: Create PR for Template
        uses: peter-evans/create-pull-request@v2
        with:
          token: ${{ secrets.engineEmiGradlePluginRepoToken }}
          labels: automerge

      - name: Checkout Samples
        uses: actions/checkout@v2
        with:
          repository: emign/engineEmi_Samples
          token: ${{ secrets.engineEmiGradlePluginRepoToken }}

      - name: Bump version number for Samples
        run: |
          sed -i 's/engineEmiGradlePluginVersion=.*/engineEmiGradlePluginVersion='"$ENGINE_VERSION"'/g' gradle.properties
          git config --global user.email ${{ secrets.gitEmail }}
          git config --global user.name ${{ secrets.gitName }}
          git add gradle.properties
          git tag automerge
          git commit -m "Bumped version number to $ENGINE_VERSION"

      - name: Create PR for Samples
        uses: peter-evans/create-pull-request@v2
        with:
          token: ${{ secrets.engineEmiGradlePluginRepoToken }}
          labels: automerge